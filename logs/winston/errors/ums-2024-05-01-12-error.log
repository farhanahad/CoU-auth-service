{
  service: 'user-service',
  statusCode: 404,
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ Student not found !',
  stack: 'Error: Student not found !\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\student\\student.service.ts:126:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\student\\student.service.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'CoU',
  timestamp: '2024-01-05T06:09:56.644Z'
}
{
  service: 'user-service',
  statusCode: 404,
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ Student not found !',
  stack: 'Error: Student not found !\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\student\\student.service.ts:126:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\student\\student.service.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'CoU',
  timestamp: '2024-01-05T06:10:37.197Z'
}
{
  level: 'error',
  service: 'user-service',
  label: 'CoU',
  timestamp: '2024-01-05T06:11:08.841Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  level: 'error',
  service: 'user-service',
  label: 'CoU',
  timestamp: '2024-01-05T06:13:31.460Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  service: 'user-service',
  statusCode: 404,
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ User does not exist',
  stack: 'Error: User does not exist\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\auth\\auth.service.ts:23:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\auth\\auth.service.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'CoU',
  timestamp: '2024-01-05T06:20:02.370Z'
}
{
  service: 'user-service',
  index: 0,
  code: 11000,
  keyPattern: { id: 1 },
  keyValue: { id: 'F-00001' },
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ E11000 duplicate key error collection: CoU-management.faculties index: id_1 dup key: { id: "F-00001" }',
  stack: 'MongoServerError: E11000 duplicate key error collection: CoU-management.faculties index: id_1 dup key: { id: "F-00001" }\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\operations\\insert.ts:85:25\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\cmap\\connection_pool.ts:574:11\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\sdam\\server.ts:384:13\n' +
    '    at handleOperationResult (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\sdam\\server.ts:532:14)\n' +
    '    at Connection.onMessage (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\cmap\\connection.ts:418:5)\n' +
    '    at MessageStream.<anonymous> (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\cmap\\connection.ts:243:56)\n' +
    '    at MessageStream.emit (node:events:511:28)\n' +
    '    at processIncomingData (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:193:12)\n' +
    '    at MessageStream._write (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\mongodb\\src\\cmap\\message_stream.ts:74:5)\n' +
    '    at writeOrBuffer (node:internal/streams/writable:399:12)',
  label: 'CoU',
  timestamp: '2024-01-05T06:23:03.910Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  service: 'user-service',
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'cookies', 'refreshToken' ],
      message: 'Refresh Token is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "cookies",\n' +
    '      "refreshToken"\n' +
    '    ],\n' +
    '    "message": "Refresh Token is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "cookies",\n' +
    '      "refreshToken"\n' +
    '    ],\n' +
    '    "message": "Refresh Token is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\zod\\lib\\types.js:165:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'CoU',
  timestamp: '2024-01-05T06:23:47.750Z'
}
{
  service: 'user-service',
  issues: [
    {
      code: 'invalid_type',
      expected: 'string',
      received: 'undefined',
      path: [ 'cookies', 'refreshToken' ],
      message: 'Refresh Token is required'
    }
  ],
  addIssue: [Function (anonymous)],
  addIssues: [Function (anonymous)],
  name: 'ZodError',
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "cookies",\n' +
    '      "refreshToken"\n' +
    '    ],\n' +
    '    "message": "Refresh Token is required"\n' +
    '  }\n' +
    ']',
  stack: 'ZodError: [\n' +
    '  {\n' +
    '    "code": "invalid_type",\n' +
    '    "expected": "string",\n' +
    '    "received": "undefined",\n' +
    '    "path": [\n' +
    '      "cookies",\n' +
    '      "refreshToken"\n' +
    '    ],\n' +
    '    "message": "Refresh Token is required"\n' +
    '  }\n' +
    ']\n' +
    '    at Object.get error [as error] (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\zod\\lib\\types.js:43:31)\n' +
    '    at ZodObject.parseAsync (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\node_modules\\zod\\lib\\types.js:165:22)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'CoU',
  timestamp: '2024-01-05T06:24:00.048Z'
}
{
  level: 'error',
  service: 'user-service',
  label: 'CoU',
  timestamp: '2024-01-05T06:24:21.382Z',
  [Symbol(errorLabels)]: Set(0) {}
}
{
  service: 'user-service',
  statusCode: 404,
  level: 'error',
  message: 'üê±‚Äçüèç globalErrorHandler ~~ User does not exist',
  stack: 'Error: User does not exist\n' +
    '    at C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\auth\\auth.service.ts:23:11\n' +
    '    at Generator.next (<anonymous>)\n' +
    '    at fulfilled (C:\\Users\\Admin\\Desktop\\CoU\\Information\\CoU-auth-service-info\\Code\\8. Lecture-15\\src\\app\\modules\\auth\\auth.service.ts:5:58)\n' +
    '    at processTicksAndRejections (node:internal/process/task_queues:95:5)',
  label: 'CoU',
  timestamp: '2024-01-05T06:25:19.387Z'
}
